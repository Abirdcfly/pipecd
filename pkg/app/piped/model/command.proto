// Copyright 2020 The Pipe Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package pipe.piped.model;
option go_package = "github.com/kapetaniosci/pipe/pkg/app/piped/model";

import "validate/validate.proto";

message Command {
    string id = 1;
    int64 timestamp = 2;

    message CancelPipeline {
        string id = 1 [(validate.rules).string.min_len = 1];
        bool keep_current_state = 2;
    }
    message ApproveStage {
        string pipeline_id = 1 [(validate.rules).string.min_len = 1];
        string stage_id = 2 [(validate.rules).string.min_len = 1];
    }
    message RetryStage {
        string pipeline_id = 1 [(validate.rules).string.min_len = 1];
        string stage_id = 2 [(validate.rules).string.min_len = 1];
    }
    message GitHookMerge {
        string hook_event_id = 1 [(validate.rules).string.min_len = 1];
        string repository = 2 [(validate.rules).string.min_len = 1];
        string sha = 3 [(validate.rules).string.min_len = 1];
        repeated string modified_files = 4 [(validate.rules).repeated.min_items = 1];
    }
    message GitHookPullRequest {
        string hook_event_id = 1 [(validate.rules).string.min_len = 1];
        string repository = 2 [(validate.rules).string.min_len = 1];
        string sha = 3 [(validate.rules).string.min_len = 1];
        repeated string modified_files = 4 [(validate.rules).repeated.min_items = 1];
        bool created = 5;
    }

    oneof inner {
        CancelPipeline cancel_pipeline = 100;
        ApproveStage approve_stage = 101;
        RetryStage retry_stage = 102;

        GitHookMerge git_hook_merge = 200;
        GitHookPullRequest git_hook_pull_request = 201;
    }
}