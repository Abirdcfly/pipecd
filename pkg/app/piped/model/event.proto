// Copyright 2020 The Pipe Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package pipe.piped.model;
option go_package = "github.com/nghialv/pipe/pkg/app/piped/model";

import "validate/validate.proto";

enum PipelineStatus {
    PIPELINE_NOT_STARTED_YET = 0;
    PIPELINE_RUNNING = 1;
    PIPELINE_SUCCESS = 2;
    PIPELINE_FAILURE = 3;
    PIPELINE_CANCELLED = 4;
    PIPELINE_ERROR = 5;
}

enum StageStatus {
    STEP_NOT_STARTED_YET = 0;
    STEP_RUNNING = 1;
    STEP_SUCCESS = 2;
    STEP_FAILURE = 3;
    STEP_CANCELLED = 4;
    STEP_ERROR = 5;
}

message Application {
    string name = 1 [(validate.rules).string.min_len = 1];
    string git_host = 2;
    string repository = 3 [(validate.rules).string.min_len = 1];
    string path = 4 [(validate.rules).string.min_len = 1];
}

message Event {
    string id = 1;
    int64 timestamp = 2;

    message PipelineStatusChanged {
        string id = 1 [(validate.rules).string.min_len = 1];
        Application application = 2 [(validate.rules).message.required = true];
        PipelineStatus previous = 3;
        PipelineStatus current = 4;
        string description = 5;
    }
    message StageStatusChanged {
        StageStatus previous = 1;
        StageStatus current = 2;
        string description = 3;
    }

    oneof inner {
        PipelineStatusChanged pipeline_status_changed = 100;
        StageStatusChanged stage_status_changed = 101;
    }
}
