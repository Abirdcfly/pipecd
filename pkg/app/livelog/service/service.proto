// Copyright 2020 The Pipe Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package pipe.livelog.service;
option go_package = "github.com/kapetaniosci/pipe/pkg/app/livelog/service";

import "validate/validate.proto";

service LiveLog {
    // WriteStageLog defines a client-side streaming RPC
    // to stream the live-log of a stage from runner to server.
    rpc WriteStageLog(stream WriteStageLogRequest) returns (WriteStageLogResponse) {}
    // GetStageLogSnapshot returns latest log snapshot of a stage.
    rpc GetStageLogSnapshot(GetStageLogSnapshotRequest) returns (GetStageLogSnapshotResponse) {}
}

message WriteStageLogRequest {
    string pipeline_id = 1 [(validate.rules).string.min_len = 1];
    string stage_id = 2 [(validate.rules).string.min_len = 1];
    string log = 3;
}

message WriteStageLogResponse {
}

message GetStageLogSnapshotRequest {
    string pipeline_id = 1 [(validate.rules).string.min_len = 1];
    string stage_id = 2 [(validate.rules).string.min_len = 1];
}

message GetStageLogSnapshotResponse {
    string log = 1;
}
