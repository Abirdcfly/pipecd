// Copyright 2020 The PipeCD Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package pipe.model;
option go_package = "github.com/kapetaniosci/pipe/pkg/model";

import "validate/validate.proto";

enum DeploymentStatus {
    DEPLOYMENT_NOT_STARTED_YET = 0;
    DEPLOYMENT_RUNNING = 1;
    DEPLOYMENT_SUCCESS = 2;
    DEPLOYMENT_FAILURE = 3;
    DEPLOYMENT_CANCELLED = 4;
    DEPLOYMENT_ERROR = 5;
}

enum StageStatus {
    STEP_NOT_STARTED_YET = 0;
    STEP_RUNNING = 1;
    STEP_SUCCESS = 2;
    STEP_FAILURE = 3;
    STEP_CANCELLED = 4;
    STEP_ERROR = 5;
}

message Deployment {
    message Trigger {
        Commit commit = 1 [(validate.rules).message.required = true];
        string author = 2 [(validate.rules).string.min_len = 1];
        int64 timestamp = 3 [(validate.rules).int64.gt = 0];
    }

    string id = 1 [(validate.rules).string.min_len = 1];
    string application_id = 2 [(validate.rules).string.min_len = 1];
    string env_id = 3 [(validate.rules).string.min_len = 1];
    string runner_id = 4 [(validate.rules).string.min_len = 1];
    string project_id = 5 [(validate.rules).string.min_len = 1];

    Trigger trigger = 6 [(validate.rules).message.required = true];
    DeploymentStatus status = 7 [(validate.rules).enum.defined_only = true];
    repeated PipelineStage stages = 8;

    int64 created_at = 14 [(validate.rules).int64.gt = 0];
    int64 updated_at = 15 [(validate.rules).int64.gt = 0];
}

message PipelineStage {
    string id = 1 [(validate.rules).string.min_len = 1];
    repeated string requires = 2;
    StageStatus status = 3 [(validate.rules).enum.defined_only = true];
    int64 created_at = 14 [(validate.rules).int64.gt = 0];
    int64 updated_at = 15 [(validate.rules).int64.gt = 0];
}

message Commit {
    string revision = 1 [(validate.rules).string.min_len = 1];
    string message = 2 [(validate.rules).string.min_len = 1];
    string author = 3 [(validate.rules).string.min_len = 1];
    string branch = 4 [(validate.rules).string.min_len = 1];
    int64 pull_request = 5;
    int64 created_at = 14 [(validate.rules).int64.gt = 0];
}